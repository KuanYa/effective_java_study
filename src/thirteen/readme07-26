第13条:使类的成员的可访问性最小化

一、好处:
    要区别设计良好的模块与设计不好的模块,最重要的因素在于，这个模块的的对于外部的其他模块而言,
否隐藏其内部数据和其他实现细节,设计良好的模块会隐藏所有的细节，把它的API与它的实现细节清晰的隔离起来，\
称之为 信息隐藏 或者 封装，是软件设计的基本原则之一
    信息隐藏之所以非常重要的原因是它可以解除系统模块之间的耦合关系,是这些模块可以独立的 开发、测试、优化
 使用、理解、修改，加快开发速度，是模块可以独立并行开发，最后，一旦系统完成，剖析优化某一个模块不会影响整个系统，
 降低了构件大型系统风险.

二、设计规则
    1、尽可能地使每个类的成员不被外界访问
对于顶层的（非嵌套的）接口和类，只要两种可能的访问级别：包级私有的（package-private）和公有的（public）

    四种访问级别：
    private ——只在声明该成员的顶层类内部才可以访问这个类

    package-private  ——声明该成员的包内部的任何类都可以访问这个成员，从技术上讲，它被称为“缺省（default）”访问级别

    protected ——声明该成员的之类也可以访问这个成员，并且，声明该成员的内部的任何类都可以访问

    public ——任何地方都可以访问

    2、只有当同一个包内的另一个类需要访问的这个成员时，才应该删除 private 是变成包级私有的

    3、受保护的成员尽量少用，因为受保护的成员时类API导出的一部分，必须永远支持

    4、实例域，静态域 不能是公有的，并且确保 静态 final域所引用的对象是不可变的

